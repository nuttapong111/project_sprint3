const { Pool } = require('pg');
require('dotenv').config({ path: './config.env' });

const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: process.env.DB_PORT || 5432,
  database: process.env.DB_NAME || 'government_digital_platform',
  user: process.env.DB_USER || 'postgres',
  password: process.env.DB_PASSWORD || 'password',
});

async function seedDigitalData() {
  try {
    console.log('Starting digital data seeding...');

    // Get user ID
    const userResult = await pool.query('SELECT id FROM users WHERE email = $1', ['john.doe@email.com']);
    if (userResult.rows.length === 0) {
      console.log('‚ùå User not found. Please run seed.js first.');
      await pool.end();
      return;
    }
    const userId = userResult.rows[0].id;

    // Check if data already exists
    const existingDocs = await pool.query('SELECT COUNT(*) as count FROM digital_documents WHERE user_id = $1', [userId]);
    const existingNotifs = await pool.query('SELECT COUNT(*) as count FROM notifications WHERE user_id = $1', [userId]);

    if (parseInt(existingDocs.rows[0].count) > 0 || parseInt(existingNotifs.rows[0].count) > 0) {
      console.log('üìä Digital data already exists, skipping...');
      await pool.end();
      return;
    }

    // Insert digital documents
    console.log('üìÑ Inserting digital documents...');
    const documents = [
      {
        user_id: userId,
        document_type: 'id_card',
        document_name: '‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô',
        document_number: '1234567890123',
        issue_date: '2020-01-01',
        expiry_date: '2030-01-01',
        status: 'active',
        issued_by: '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏Ç‡∏ï‡∏ß‡∏±‡∏í‡∏ô‡∏≤'
      },
      {
        user_id: userId,
        document_type: 'driving_license',
        document_name: '‡πÉ‡∏ö‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà',
        document_number: '1234567890',
        issue_date: '2022-06-15',
        expiry_date: '2027-06-15',
        status: 'active',
        issued_by: '‡∏Å‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏ó‡∏≤‡∏á‡∏ö‡∏Å'
      },
      {
        user_id: userId,
        document_type: 'passport',
        document_name: '‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á',
        document_number: 'A1234567',
        issue_date: '2023-03-10',
        expiry_date: '2033-03-10',
        status: 'active',
        issued_by: '‡∏Å‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏Å‡∏á‡∏™‡∏∏‡∏•'
      },
      {
        user_id: userId,
        document_type: 'birth_certificate',
        document_name: '‡∏™‡∏π‡∏ï‡∏¥‡∏ö‡∏±‡∏ï‡∏£',
        document_number: 'BC123456789',
        issue_date: '1990-05-20',
        expiry_date: null, // Birth certificate doesn't expire
        status: 'active',
        issued_by: '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô'
      }
    ];

    for (const doc of documents) {
      await pool.query(
        `INSERT INTO digital_documents (user_id, document_type, document_name, document_number, issue_date, expiry_date, status, issued_by)
         VALUES ($1, $2, $3, $4, $5, $6, $7, $8)`,
        [doc.user_id, doc.document_type, doc.document_name, doc.document_number, doc.issue_date, doc.expiry_date, doc.status, doc.issued_by]
      );
      console.log(`  ‚úì Inserted: ${doc.document_name}`);
    }

    // Insert notifications
    console.log('üì¨ Inserting notifications...');
    const notifications = [
      {
        user_id: userId,
        title: '‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏',
        message: '‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 30 ‡∏ß‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏',
        type: 'warning'
      },
      {
        user_id: userId,
        title: '‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß',
        message: '‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏à‡∏∏‡∏¨‡∏≤‡∏•‡∏á‡∏Å‡∏£‡∏ì‡πå ‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 20 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2567 ‡πÄ‡∏ß‡∏•‡∏≤ 09:00 ‡∏ô. ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß',
        type: 'success',
        is_read: true
      },
      {
        user_id: userId,
        title: '‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß',
        message: '‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà 123/45 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ',
        type: 'success',
        is_read: false
      },
      {
        user_id: userId,
        title: '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß',
        message: '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢',
        type: 'success'
      },
      {
        user_id: userId,
        title: '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏',
        message: '‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô 30 ‡∏ß‡∏±‡∏ô',
        type: 'warning',
        is_read: false
      },
      {
        user_id: userId,
        title: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏∞‡∏ö‡∏ö',
        message: '‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
        type: 'info',
        is_read: true
      },
      {
        user_id: userId,
        title: '‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå',
        message: '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ',
        type: 'info',
        is_read: true
      }
    ];

    for (const notif of notifications) {
      await pool.query(
        `INSERT INTO notifications (user_id, title, message, type, is_read)
         VALUES ($1, $2, $3, $4, $5)`,
        [notif.user_id, notif.title, notif.message, notif.type, notif.is_read || false]
      );
      console.log(`  ‚úì Inserted: ${notif.title}`);
    }

    console.log('\n‚úÖ Digital data seeding completed successfully!');
  } catch (error) {
    console.error('‚ùå Error seeding digital data:', error);
    process.exit(1);
  } finally {
    await pool.end();
  }
}

// Run the seeding function
seedDigitalData();

